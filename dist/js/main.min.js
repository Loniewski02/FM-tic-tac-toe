let teamBtns,appBoxes,startMultiplayerGameBtn,startSingleplayerGameBtn,currentTurnInfo,p1PointsStatus,p1PointsTitle,p2PointsStatus,p2PointsTitle,tiesStatus,summaryBoardWin,summaryBoardWinner,newGameBtn,quitGameBtn,restartBtn,cancelRestartBtn,confirmRestartBtn,difficultyBtns,isComputerTurn=!1,difficultyLevel,startingTeam="x",playerTeam="o",cpuTeam="x",ties=0,p1Points=0,p2Points=0;const winConditions=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],main=()=>{prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=()=>{teamBtns=document.querySelectorAll(".app-menu__box-btn"),startMultiplayerGameBtn=document.querySelector(".app-menu__btns-btn--multi"),startSingleplayerGameBtn=document.querySelector(".app-menu__btns-btn--solo"),currentTurnInfo=document.querySelector(".app-main__nav-info-img"),p1PointsStatus=document.querySelector(".app-main__body-summary--p1 .app-main__body-summary-number"),p1PointsTitle=document.querySelector(".app-main__body-summary--p1 .app-main__body-summary-title"),p2PointsStatus=document.querySelector(".app-main__body-summary--p2 .app-main__body-summary-number"),p2PointsTitle=document.querySelector(".app-main__body-summary--p2 .app-main__body-summary-title"),tiesStatus=document.querySelector(".app-main__body-summary--ties .app-main__body-summary-number"),appBoxes=document.querySelectorAll(".app-main__body-box"),difficultyBtns=document.querySelectorAll(".difficulty-btn"),summaryBoardWin=document.querySelector(".summary-board--win"),summaryBoardWinner=document.querySelector(".summary-board__win-info"),newGameBtn=document.querySelectorAll(".new-game"),quitGameBtn=document.querySelectorAll(".quit-game"),restartBtn=document.querySelector(".app-main__nav-restart-btn"),cancelRestartBtn=document.querySelector(".summary-board__btn-restart--cancel"),confirmRestartBtn=document.querySelector(".summary-board__btn-restart--confirm")},prepareDOMEvents=()=>{menuAnimationIn(),startMultiplayerGameBtn.addEventListener("click",openMultiplayerGame),startSingleplayerGameBtn.addEventListener("click",openSingleplayerMenu),teamBtns.forEach(t=>t.addEventListener("click",handleTeam)),newGameBtn.forEach(t=>t.addEventListener("click",resetGame)),quitGameBtn.forEach(t=>t.addEventListener("click",backToMenu)),restartBtn.addEventListener("click",()=>{summaryBoardAnimationIn(".summary-board--restart")}),cancelRestartBtn.addEventListener("click",()=>{summaryBoardAnimationOut(".summary-board--restart")}),confirmRestartBtn.addEventListener("click",backToMenu)},clearWinnerBoardClass=()=>{summaryBoardWin.classList.remove("summary-board--win-x"),summaryBoardWin.classList.remove("summary-board--win-o")},disableBoxes=()=>{appBoxes.forEach(t=>{t.classList.add("app-main__body-box--used")})},clearBoxes=()=>{appBoxes.forEach(t=>{t.classList.remove("app-main__body-box--used"),t.style.backgroundColor="#1f3641",t.style.backgroundImage="",t.style.transform="",t.innerHTML=""})},backToMenu=()=>{summaryBoardAnimationOut(".summary-board"),mainAppAnimationOut(),setTimeout(()=>{ties=0,p1Points=0,p2Points=0,p1PointsStatus.textContent="--",p2PointsStatus.textContent="--",tiesStatus.textContent="--",clearBoxes(),menuAnimationIn(),clearWinnerBoardClass()},1e3)},resetGame=()=>{summaryBoardAnimationOut(".summary-board"),setTimeout(()=>{clearBoxes(),clearWinnerBoardClass()},1e3)},handleTeam=()=>{teamBtns.forEach(t=>{t.classList.contains("app-menu__box-btn--active")&&t.classList.toggle("app-menu__box-btn--active")}),teamPick(event)},teamPick=t=>{t=t.target.closest("button");t.classList.add("app-menu__box-btn--active"),t.classList.contains("app-menu__box-btn--active")&&("x"===(playerTeam=t.dataset.team)?cpuTeam="o":"o"===playerTeam&&(cpuTeam="x"))},openMultiplayerGame=()=>{menuAnimationOut(),mainAppAnimationIn(),startMultiplayerGame()},startMultiplayerGame=()=>{appBoxes.forEach(t=>{t.addEventListener("mouseenter",()=>{handleBoxHover(event,startingTeam)}),t.addEventListener("mouseleave",handleBoxLeave),t.removeEventListener("click",singleplayerGame),t.addEventListener("click",multiplayerGame)})},multiplayerGame=t=>{t=t.target;t.classList.contains("app-main__body-box--used")||(t.classList.add("app-main__body-box--used"),t.style.backgroundImage="",t.innerHTML=`<img src="./dist/img/icons/icon-${startingTeam}.svg" alt="" class="app-main__body-box-img">`,checkWin(startingTeam)?(disableBoxes(),"x"===startingTeam?(p1Points++,p1PointsStatus.textContent=p1Points,p1PointsTitle.textContent="x (p1)",summaryBoardWinner.textContent="player 1 wins!"):(p2Points++,p2PointsStatus.textContent=p2Points,p2PointsTitle.textContent="o (p2)",summaryBoardWinner.textContent="player 2 wins!"),summaryBoardWin.classList.add("summary-board--win-"+startingTeam),setTimeout(()=>{summaryBoardAnimationIn(".summary-board--win-"+startingTeam),startingTeam="x"},500)):checkTie()?(disableBoxes(),ties++,tiesStatus.textContent=ties,summaryBoardAnimationIn(".summary-board--tied"),startingTeam="x"):(startingTeam="o"===startingTeam?"x":"o",currentTurnInfo.setAttribute("src",`./dist/img/icons/icon-${startingTeam}.svg`)))},openSingleplayerMenu=()=>{summaryBoardAnimationIn(".summary-board--difficulty"),difficultyBtns.forEach(t=>{t.addEventListener("click",getDifficulty)})},openSingleplayerGame=()=>{summaryBoardAnimationOut(".summary-board--difficulty"),setTimeout(()=>{menuAnimationOut(),mainAppAnimationIn(),singleplayerGame()},500),startSingleplayerGame()},getDifficulty=t=>{t=t.target.dataset.difficulty;difficultyLevel=t,openSingleplayerGame()},startSingleplayerGame=()=>{if(appBoxes.forEach(t=>{t.addEventListener("mouseenter",t=>{handleBoxHover(t,playerTeam)}),t.addEventListener("mouseleave",handleBoxLeave),t.removeEventListener("click",multiplayerGame),t.addEventListener("click",singleplayerGame)}),"o"===playerTeam&&"x"===cpuTeam){const t=Array.from(document.querySelectorAll(".app-main__body-box:not(.app-main__body-box--used)"));"easy"===difficultyLevel&&setTimeout(()=>{makeEasyMove(t)},500)}},changeTeams=()=>{"x"===playerTeam?(p1PointsTitle.textContent=playerTeam+"(player)",p2PointsTitle.textContent=cpuTeam+"(CPU)"):"o"===playerTeam&&(p2PointsTitle.textContent=playerTeam+"(player)",p1PointsTitle.textContent=cpuTeam+"(CPU)")},singleplayerGame=t=>{const e=Array.from(document.querySelectorAll(".app-main__body-box:not(.app-main__body-box--used)"));let a;changeTeams();t=t.target;t.classList.contains("app-main__body-box--used")||isComputerTurn||(t.classList.add("app-main__body-box--used"),t.style.backgroundImage="",t.innerHTML=`<img src="./dist/img/icons/icon-${playerTeam}.svg" alt="" class="app-main__body-box-img">`,a=handleMoveResult(playerTeam,"you won!")),"easy"===difficultyLevel&&!a&&1<e.length&&(isComputerTurn=!0,setTimeout(()=>{makeEasyMove(e),handleMoveResult(cpuTeam,"oh no, you lost ..."),isComputerTurn=!1},500))},makeEasyMove=t=>{var t=Array.isArray(t)?t.filter(t=>!t.classList.contains("app-main__body-box--used")):[];0<t.length&&((t=t[Math.floor(Math.random()*t.length)]).classList.add("app-main__body-box--used"),t.style.backgroundImage="",t.innerHTML=`<img src="./dist/img/icons/icon-${cpuTeam}.svg" alt="" class="app-main__body-box-img">`)},handleMoveResult=(t,e)=>checkWin(t)?(disableBoxes(),"o"===t?(p2Points++,p2PointsStatus.textContent=p2Points):(p1Points++,p1PointsStatus.textContent=p1Points),summaryBoardWinner.textContent=e,summaryBoardWin.classList.add("summary-board--win-"+t),setTimeout(()=>{summaryBoardAnimationIn(".summary-board--win-"+t)},500),!0):checkTie()?(disableBoxes(),ties++,tiesStatus.textContent=ties,summaryBoardAnimationIn(".summary-board--tied"),!1):(startingTeam="o"===startingTeam?"x":"o",void currentTurnInfo.setAttribute("src",`./dist/img/icons/icon-${startingTeam}.svg`)),checkWin=e=>{for(const i of winConditions){var[t,a,n]=i,o=[appBoxes[t],appBoxes[a],appBoxes[n]];if(appBoxes[t].innerHTML===`<img src="./dist/img/icons/icon-${e}.svg" alt="" class="app-main__body-box-img">`&&appBoxes[a].innerHTML===`<img src="./dist/img/icons/icon-${e}.svg" alt="" class="app-main__body-box-img">`&&appBoxes[n].innerHTML===`<img src="./dist/img/icons/icon-${e}.svg" alt="" class="app-main__body-box-img">`)return o.forEach(t=>{t.style.backgroundColor="o"===e?"#ffc860":"#31c3bd",t.style.transform="scale(1.1)",t.querySelector("img").style.filter="brightness(0) saturate(100%) invert(12%) sepia(6%) saturate(3580%) hue-rotate(158deg) brightness(97%) contrast(91%)"}),!0}return!1},checkTie=()=>{return Array.from(appBoxes).filter(t=>t.classList.contains("app-main__body-box--used")).length===appBoxes.length},handleBoxHover=(t,e)=>{t=t.target;t.classList.contains("app-main__body-box--used")||(t.style.backgroundImage=`url(./dist/img/icons/icon-${e}-outline.svg)`)},handleBoxLeave=t=>{t=t.target;t.classList.contains("app-main__body-box--used")||(t.style.backgroundImage="")},menuAnimationIn=()=>{gsap.to(".app-menu",{duration:1,opacity:"1",height:"100%",top:0})},menuAnimationOut=()=>{gsap.to(".app-menu",{duration:1,top:"-50%",opacity:"0",height:"0"})},summaryBoardAnimationIn=t=>{gsap.to(t,{duration:.5,right:"0",opacity:"1",visibility:"visible"}),gsap.to(".summary-board-shadow--bottom",{duration:.5,delay:.5,height:"50vh",opacity:.6}),gsap.to(".summary-board-shadow--top",{duration:.5,delay:.5,height:"50vh",opacity:.6}),gsap.to(".app-main__body-box",{duration:.5,delay:.3,marginLeft:"-3em"})},summaryBoardAnimationOut=t=>{gsap.to(".summary-board-shadow--bottom",{duration:.5,height:"0",opacity:0}),gsap.to(".summary-board-shadow--top",{duration:.5,height:"0",opacity:0}),gsap.to(t,{duration:.5,delay:.5,right:"-110%",opacity:"0"}),gsap.to(".app-main__body-box",{duration:.3,delay:1,marginLeft:"0"})},mainAppAnimationIn=()=>{gsap.to(".app-main",{duration:1,bottom:"0",opacity:"1",height:"100%",display:"flex"}),gsap.to(".app-main__body-box",{duration:.5,delay:.8,opacity:"1",width:"100%",height:"100%"}),gsap.to(".app-main__body-box",{duration:.3,delay:1,marginLeft:"0"})},mainAppAnimationOut=()=>{gsap.to(".app-main",{duration:1,delay:.8,bottom:"-50%",opacity:"0",height:"0"}),gsap.to(".app-main",{duration:.1,delay:1.5,display:"none"}),gsap.to(".app-main__body-box",{duration:.2,delay:.6,opacity:"0"})};document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
